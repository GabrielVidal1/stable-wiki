"use strict";(self.webpackChunkstable_wiki=self.webpackChunkstable_wiki||[]).push([[544],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),p=n,m=d["".concat(l,".").concat(p)]||d[p]||f[p]||o;return a?i.createElement(m,r(r({ref:t},u),{},{components:a})):i.createElement(m,r({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,r[1]=s;for(var c=2;c<o;c++)r[c]=a[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1582:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=a(7462),n=(a(7294),a(3905));const o={},r="VAE",s={unversionedId:"stable-diffusion/VAE",id:"stable-diffusion/VAE",title:"VAE",description:"The simplest explanation is that it makes an image small then makes it bigger again.",source:"@site/docs/stable-diffusion/VAE.md",sourceDirName:"stable-diffusion",slug:"/stable-diffusion/VAE",permalink:"/stable-wiki/docs/stable-diffusion/VAE",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stable diffusion",permalink:"/stable-wiki/docs/stable-diffusion/"},next:{title:"Diffuser",permalink:"/stable-wiki/docs/stable-diffusion/diffuser"}},l={},c=[{value:"VAE (Variational Autoencoder) in Stable Diffusion",id:"vae-variational-autoencoder-in-stable-diffusion",level:2},{value:"Original Autoencoder in Stable Diffusion",id:"original-autoencoder-in-stable-diffusion",level:3},{value:"EMA VAE in Stable Diffusion",id:"ema-vae-in-stable-diffusion",level:3},{value:"MSE VAE in Stable Diffusion",id:"mse-vae-in-stable-diffusion",level:3},{value:"VQGAN",id:"vqgan",level:3}],u={toc:c},d="wrapper";function f(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"vae"},"VAE"),(0,n.kt)("p",null,"The simplest explanation is that it makes an image small then makes it bigger again."),(0,n.kt)("p",null,"A Variational Autoencoder (VAE) is an artificial neural network architecture that belongs to the families of probabilistic graphical models and variational Bayesian methods. It is a type of neural network that learns to reproduce its input, and also map data to latent space. VAEs use probability modeling in a neural network system to provide the kinds of equilibrium that autoencoders are typically used to produce. The neural network components are typically referred to as the encoder and decoder for the first and second component respectively. VAE's are part of the neural network model that encodes and decodes the images to and from the smaller latent space, so that computation can be faster. Any models you use, be it v1, v2 or custom, already comes with a default VAE"),(0,n.kt)("h2",{id:"vae-variational-autoencoder-in-stable-diffusion"},"VAE (Variational Autoencoder) in Stable Diffusion"),(0,n.kt)("p",null,"In Stable Diffusion, the VAE (or encoder-decoder) component is responsible for compressing the input images into a smaller, latent space, which helps to reduce the VRAM requirements for the diffusion process. In practice, it is important to use a decoder that can effectively reconstruct the original image from the latent space representation."),(0,n.kt)("p",null,"While the default VAE models included with Stable Diffusion are suitable for many applications, there are other fine-tuned models available that may better meet specific needs. For example, the Hugging Face model repository includes a range of fine-tuned VAE models that may be useful for certain tasks."),(0,n.kt)("p",null,"When selecting a VAE model, it is important to consider factors such as dataset size, resolution, and other hyperparameters that may impact performance. Ultimately, the choice of VAE model will depend on the specific needs and requirements of the project at hand."),(0,n.kt)("h3",{id:"original-autoencoder-in-stable-diffusion"},"Original Autoencoder in Stable Diffusion"),(0,n.kt)("p",null,"The original autoencoder included in Stable Diffusion is the default encoder-decoder used in the model. While it is generally effective at compressing images into a latent space for the diffusion process, it may not perform as well on certain types of images, particularly human faces."),(0,n.kt)("p",null,"Over time, several fine-tuned autoencoder models have been developed and made available to the community. These models often perform better than the original autoencoder for specific tasks and image types."),(0,n.kt)("p",null,"When selecting an autoencoder model for a specific application, it is important to consider factors such as image resolution, dataset size, and other hyperparameters that may impact performance. Ultimately, the choice of the autoencoder model will depend on the specific needs and requirements of the project at hand."),(0,n.kt)("h3",{id:"ema-vae-in-stable-diffusion"},"EMA VAE in Stable Diffusion"),(0,n.kt)("p",null,"The EMA (Exponential Moving Average) VAE is a fine-tuned encoder-decoder included in Stable Diffusion that is specifically designed to perform well on human faces. This model uses an exponential moving average of the encoder weights during training, which helps to stabilize the training process and improve overall performance."),(0,n.kt)("p",null,"Compared to the original autoencoder included with Stable Diffusion, the EMA VAE generally produces better results on images of human faces. However, it is important to consider other factors such as image resolution, dataset size, and other hyperparameters when selecting a VAE model for a specific application."),(0,n.kt)("p",null,"Overall, the EMA VAE is a valuable addition to the range of encoder-decoder models available in Stable Diffusion, particularly for applications that require high-quality image generation of human faces."),(0,n.kt)("h3",{id:"mse-vae-in-stable-diffusion"},"MSE VAE in Stable Diffusion"),(0,n.kt)("p",null,"The MSE (Mean Squared Error) VAE is another fine-tuned encoder-decoder included in Stable Diffusion that is designed to perform well on images of human faces. This model uses MSE as the reconstruction loss during training, which can help to improve the quality of the reconstructed images."),(0,n.kt)("p",null,"Compared to the original autoencoder and other VAE models included with Stable Diffusion, the MSE VAE generally produces better results on images of human faces. However, as with any model selection, it is important to consider other factors such as image resolution, dataset size, and other hyperparameters."),(0,n.kt)("p",null,"Overall, the MSE VAE is a useful option for applications that require high-quality image generation of human faces, particularly when used in combination with other techniques such as diffusion and CLIP-guidance."),(0,n.kt)("h3",{id:"vqgan"},"VQGAN"),(0,n.kt)("p",null,"VQGAN is short for Vector Quantized Generative Adversarial Network and is utilized for high-resolution images; and is a type of neural network architecture that combines convolutional neural networks with Transformers. VQGAN employs the same two-stage structure by learning an intermediary representation before feeding it to a transformer. However, instead of downsampling the image, VQGAN uses a codebook to represent visual parts.\n",(0,n.kt)("a",{parentName:"p",href:"https://compvis.github.io/taming-transformers/"},"https://compvis.github.io/taming-transformers/")))}f.isMDXComponent=!0}}]);